{"ast":null,"code":"var _jsxFileName = \"/Users/maximiliandazer/Process Control chart/Process-Control-chart/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, Box, Alert, CircularProgress, ThemeProvider, createTheme, CssBaseline } from '@mui/material';\nimport DataInput from './components/data/DataInput';\nimport PBCChart from './components/charts/PBCChart';\nimport SignalDetector from './components/analysis/SignalDetector';\nimport { calculatePBC } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2'\n    },\n    secondary: {\n      main: '#dc004e'\n    }\n  }\n});\nfunction App() {\n  _s();\n  const [analysis, setAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [config, setConfig] = useState(null);\n  const handleDataSubmit = async (data, chartConfig) => {\n    setLoading(true);\n    setError(null);\n    setConfig(chartConfig);\n    try {\n      console.log('Submitting data:', data); // Debug log\n      console.log('Chart configuration:', chartConfig); // Debug log\n\n      // Validate data before sending\n      if (!data || data.length === 0) {\n        throw new Error('No data provided');\n      }\n      if (data.length < 3) {\n        throw new Error('Minimum 3 data points required for PBC calculation');\n      }\n\n      // Ensure chronological ordering (Vacanti's requirement)\n      const sortedData = [...data].sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime());\n\n      // Validate each data point\n      sortedData.forEach((point, index) => {\n        if (!point.timestamp || isNaN(point.timestamp.getTime())) {\n          throw new Error(`Invalid timestamp at data point ${index + 1}`);\n        }\n        if (typeof point.value !== 'number' || isNaN(point.value) || !isFinite(point.value)) {\n          throw new Error(`Invalid value at data point ${index + 1}: ${point.value}`);\n        }\n        if (point.value < 0) {\n          throw new Error(`Negative values not allowed at data point ${index + 1}: ${point.value}`);\n        }\n      });\n\n      // Remove the duplicate timestamp check - this is allowed per Vacanti's methodology\n      // Multiple work items can complete on the same day in real flow metrics\n\n      console.log('Data validation passed, calling API...'); // Debug log\n\n      const result = await calculatePBC({\n        data: sortedData,\n        // Use chronologically sorted data\n        baselinePeriod: chartConfig.baselinePeriod,\n        detectionRules: chartConfig.detectionRules\n      });\n      console.log('Received result:', result); // Debug log\n\n      // Validate the response structure\n      if (!result) {\n        throw new Error('No response received from server');\n      }\n      if (!result.xChart) {\n        throw new Error('Invalid response structure: missing xChart');\n      }\n      if (!result.xChart.timestamps) {\n        throw new Error('Invalid response structure: missing xChart.timestamps');\n      }\n      if (!result.mrChart) {\n        throw new Error('Invalid response structure: missing mrChart');\n      }\n      if (!result.signals) {\n        throw new Error('Invalid response structure: missing signals');\n      }\n      console.log('Response validation passed'); // Debug log\n\n      setAnalysis(result);\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response3;\n      console.error('Error details:', err);\n\n      // Provide specific error messages based on error type\n      let errorMessage = 'Failed to calculate PBC';\n      if (err.message) {\n        errorMessage = err.message;\n      } else if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.detail) {\n        errorMessage = err.response.data.detail;\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 400) {\n        errorMessage = 'Invalid data provided. Please check your input.';\n      } else if (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 500) {\n        errorMessage = 'Server error during calculation. Please try again.';\n      } else if (err.code === 'ECONNREFUSED') {\n        errorMessage = 'Cannot connect to backend server. Please ensure the backend is running on port 8000.';\n      } else if (err.code === 'NETWORK_ERROR') {\n        errorMessage = 'Network error. Please check your connection.';\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRetry = () => {\n    setError(null);\n    setAnalysis(null);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          gutterBottom: true,\n          align: \"center\",\n          children: \"Process Behaviour Chart Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"textSecondary\",\n          align: \"center\",\n          children: \"Create XmR charts to distinguish between routine variation (noise) and exceptional variation (signal)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          align: \"center\",\n          sx: {\n            mt: 2\n          },\n          children: \"Based on Vacanti's methodology: \\\"Data have no meaning apart from their context\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataInput, {\n        onDataSubmit: handleDataSubmit,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        my: 4,\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mt: 2\n          },\n          children: \"Calculating Process Behaviour Chart using Vacanti's XmR methodology...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 3\n        },\n        action: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRetry,\n          style: {\n            background: 'none',\n            border: 'none',\n            color: 'inherit',\n            textDecoration: 'underline',\n            cursor: 'pointer'\n          },\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          gutterBottom: true,\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), analysis && config && !loading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Analysis Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: [\"Baseline Period: \", analysis.baselinePeriod, \" data points | Detection Rules: \", config.detectionRules.join(', ').toUpperCase(), \" | Signals Detected: \", analysis.signals.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            sx: {\n              mt: 1\n            },\n            children: \"Following Vacanti's principle: Chronologically ordered data preserving temporal context\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PBCChart, {\n          analysis: analysis,\n          showSigmaLines: config.showSigmaLines,\n          title: \"Process Behaviour Chart (XmR) - Vacanti Methodology\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SignalDetector, {\n          signals: analysis.signals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), analysis.signals.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Process Operating Predictably\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), \"No signals detected. Your process exhibits only routine variation within Natural Process Limits, indicating predictable performance suitable for forecasting as described in Vacanti's methodology.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), !analysis && !loading && !error && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          mt: 6,\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: \"Ready to Analyze Your Process\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"textSecondary\",\n          children: \"Enter your time series data above and click \\\"Generate PBC\\\" to create your Process Behaviour Chart. Minimum 6 data points recommended for meaningful analysis per Vacanti's guidance.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), \" Duplicate timestamps are allowed - multiple work items can complete on the same day.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uf25SyIdE72R3uORpuAcq6XoDh8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Typography","Box","Alert","CircularProgress","ThemeProvider","createTheme","CssBaseline","DataInput","PBCChart","SignalDetector","calculatePBC","jsxDEV","_jsxDEV","Fragment","_Fragment","theme","palette","primary","main","secondary","App","_s","analysis","setAnalysis","loading","setLoading","error","setError","config","setConfig","handleDataSubmit","data","chartConfig","console","log","length","Error","sortedData","sort","a","b","timestamp","getTime","forEach","point","index","isNaN","value","isFinite","result","baselinePeriod","detectionRules","xChart","timestamps","mrChart","signals","err","_err$response","_err$response$data","_err$response2","_err$response3","errorMessage","message","response","detail","status","code","handleRetry","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","py","mb","variant","component","gutterBottom","align","color","mt","onDataSubmit","display","flexDirection","alignItems","my","size","severity","action","onClick","style","background","border","textDecoration","cursor","join","toUpperCase","showSigmaLines","title","textAlign","_c","$RefreshReg$"],"sources":["/Users/maximiliandazer/Process Control chart/Process-Control-chart/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Alert,\n  CircularProgress,\n  ThemeProvider,\n  createTheme,\n  CssBaseline\n} from '@mui/material';\nimport DataInput from './components/data/DataInput';\nimport PBCChart from './components/charts/PBCChart';\nimport SignalDetector from './components/analysis/SignalDetector';\nimport { DataPoint, ChartConfiguration, PBCAnalysis } from './types';\nimport { calculatePBC } from './services/api';\nimport './App.css';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n  },\n});\n\nfunction App() {\n  const [analysis, setAnalysis] = useState<PBCAnalysis | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [config, setConfig] = useState<ChartConfiguration | null>(null);\n\n  const handleDataSubmit = async (data: DataPoint[], chartConfig: ChartConfiguration) => {\n    setLoading(true);\n    setError(null);\n    setConfig(chartConfig);\n    \n    try {\n      console.log('Submitting data:', data); // Debug log\n      console.log('Chart configuration:', chartConfig); // Debug log\n      \n      // Validate data before sending\n      if (!data || data.length === 0) {\n        throw new Error('No data provided');\n      }\n\n      if (data.length < 3) {\n        throw new Error('Minimum 3 data points required for PBC calculation');\n      }\n\n      // Ensure chronological ordering (Vacanti's requirement)\n      const sortedData = [...data].sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime());\n\n      // Validate each data point\n      sortedData.forEach((point, index) => {\n        if (!point.timestamp || isNaN(point.timestamp.getTime())) {\n          throw new Error(`Invalid timestamp at data point ${index + 1}`);\n        }\n        if (typeof point.value !== 'number' || isNaN(point.value) || !isFinite(point.value)) {\n          throw new Error(`Invalid value at data point ${index + 1}: ${point.value}`);\n        }\n        if (point.value < 0) {\n          throw new Error(`Negative values not allowed at data point ${index + 1}: ${point.value}`);\n        }\n      });\n\n      // Remove the duplicate timestamp check - this is allowed per Vacanti's methodology\n      // Multiple work items can complete on the same day in real flow metrics\n\n      console.log('Data validation passed, calling API...'); // Debug log\n      \n      const result = await calculatePBC({\n        data: sortedData, // Use chronologically sorted data\n        baselinePeriod: chartConfig.baselinePeriod,\n        detectionRules: chartConfig.detectionRules\n      });\n      \n      console.log('Received result:', result); // Debug log\n      \n      // Validate the response structure\n      if (!result) {\n        throw new Error('No response received from server');\n      }\n\n      if (!result.xChart) {\n        throw new Error('Invalid response structure: missing xChart');\n      }\n\n      if (!result.xChart.timestamps) {\n        throw new Error('Invalid response structure: missing xChart.timestamps');\n      }\n\n      if (!result.mrChart) {\n        throw new Error('Invalid response structure: missing mrChart');\n      }\n\n      if (!result.signals) {\n        throw new Error('Invalid response structure: missing signals');\n      }\n\n      console.log('Response validation passed'); // Debug log\n      \n      setAnalysis(result);\n    } catch (err: any) {\n      console.error('Error details:', err);\n      \n      // Provide specific error messages based on error type\n      let errorMessage = 'Failed to calculate PBC';\n      \n      if (err.message) {\n        errorMessage = err.message;\n      } else if (err.response?.data?.detail) {\n        errorMessage = err.response.data.detail;\n      } else if (err.response?.status === 400) {\n        errorMessage = 'Invalid data provided. Please check your input.';\n      } else if (err.response?.status === 500) {\n        errorMessage = 'Server error during calculation. Please try again.';\n      } else if (err.code === 'ECONNREFUSED') {\n        errorMessage = 'Cannot connect to backend server. Please ensure the backend is running on port 8000.';\n      } else if (err.code === 'NETWORK_ERROR') {\n        errorMessage = 'Network error. Please check your connection.';\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRetry = () => {\n    setError(null);\n    setAnalysis(null);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container maxWidth=\"xl\" sx={{ py: 4 }}>\n        <Box sx={{ mb: 4 }}>\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n            Process Behaviour Chart Generator\n          </Typography>\n          <Typography variant=\"h6\" color=\"textSecondary\" align=\"center\">\n            Create XmR charts to distinguish between routine variation (noise) and exceptional variation (signal)\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" sx={{ mt: 2 }}>\n            Based on Vacanti's methodology: \"Data have no meaning apart from their context\"\n          </Typography>\n        </Box>\n\n        <DataInput onDataSubmit={handleDataSubmit} loading={loading} />\n\n        {loading && (\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" my={4}>\n            <CircularProgress size={60} />\n            <Typography variant=\"body2\" sx={{ mt: 2 }}>\n              Calculating Process Behaviour Chart using Vacanti's XmR methodology...\n            </Typography>\n          </Box>\n        )}\n\n        {error && (\n          <Alert \n            severity=\"error\" \n            sx={{ mb: 3 }}\n            action={\n              <button onClick={handleRetry} style={{ \n                background: 'none', \n                border: 'none', \n                color: 'inherit', \n                textDecoration: 'underline',\n                cursor: 'pointer'\n              }}>\n                Try Again\n              </button>\n            }\n          >\n            <Typography variant=\"subtitle2\" gutterBottom>\n              Error\n            </Typography>\n            {error}\n          </Alert>\n        )}\n\n        {analysis && config && !loading && !error && (\n          <>\n            <Box sx={{ mb: 3 }}>\n              <Typography variant=\"h4\" gutterBottom>\n                Analysis Results\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Baseline Period: {analysis.baselinePeriod} data points | \n                Detection Rules: {config.detectionRules.join(', ').toUpperCase()} | \n                Signals Detected: {analysis.signals.length}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mt: 1 }}>\n                Following Vacanti's principle: Chronologically ordered data preserving temporal context\n              </Typography>\n            </Box>\n            \n            <PBCChart \n              analysis={analysis} \n              showSigmaLines={config.showSigmaLines}\n              title=\"Process Behaviour Chart (XmR) - Vacanti Methodology\"\n            />\n            \n            <SignalDetector signals={analysis.signals} />\n            \n            {analysis.signals.length === 0 && (\n              <Alert severity=\"success\" sx={{ mt: 3 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  Process Operating Predictably\n                </Typography>\n                No signals detected. Your process exhibits only routine variation within Natural Process Limits, \n                indicating predictable performance suitable for forecasting as described in Vacanti's methodology.\n              </Alert>\n            )}\n          </>\n        )}\n\n        {!analysis && !loading && !error && (\n          <Box sx={{ textAlign: 'center', mt: 6, mb: 4 }}>\n            <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom>\n              Ready to Analyze Your Process\n            </Typography>\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              Enter your time series data above and click \"Generate PBC\" to create your Process Behaviour Chart.\n              Minimum 6 data points recommended for meaningful analysis per Vacanti's guidance.\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mt: 2 }}>\n              <strong>Note:</strong> Duplicate timestamps are allowed - multiple work items can complete on the same day.\n            </Typography>\n          </Box>\n        )}\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}