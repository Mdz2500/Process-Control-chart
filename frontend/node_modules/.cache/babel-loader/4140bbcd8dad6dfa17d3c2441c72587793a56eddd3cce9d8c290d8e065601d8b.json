{"ast":null,"code":"var _jsxFileName = \"/Users/maximiliandazer/Process Control chart/Process-Control-chart/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, Box, Alert, CircularProgress, ThemeProvider, createTheme, CssBaseline } from '@mui/material';\nimport DataInput from './components/data/DataInput';\nimport PBCChart from './components/charts/PBCChart';\nimport ThroughputChart from './components/charts/ThroughputChart';\nimport SignalDetector from './components/analysis/SignalDetector';\nimport { calculatePBC, calculateThroughput } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2'\n    },\n    secondary: {\n      main: '#dc004e'\n    }\n  }\n});\nfunction App() {\n  _s();\n  const [analysis, setAnalysis] = useState(null);\n  const [throughputAnalysis, setThroughputAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [config, setConfig] = useState(null);\n  const [originalData, setOriginalData] = useState([]);\n  const handleDataSubmit = async (data, chartConfig) => {\n    setLoading(true);\n    setError(null);\n    setConfig(chartConfig);\n    setOriginalData(data);\n\n    // Clear previous analysis\n    setAnalysis(null);\n    setThroughputAnalysis(null);\n    try {\n      console.log('Submitting data:', data);\n      console.log('Chart configuration:', chartConfig);\n\n      // Validate data\n      if (!data || data.length === 0) {\n        throw new Error('No data provided');\n      }\n      if (data.length < 3) {\n        throw new Error('Minimum 3 data points required');\n      }\n\n      // Sort data chronologically\n      const sortedData = [...data].sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime());\n\n      // Validate each data point\n      sortedData.forEach((point, index) => {\n        if (!point.timestamp || isNaN(point.timestamp.getTime())) {\n          throw new Error(`Invalid timestamp at data point ${index + 1}`);\n        }\n        if (typeof point.value !== 'number' || isNaN(point.value) || !isFinite(point.value)) {\n          throw new Error(`Invalid value at data point ${index + 1}: ${point.value}`);\n        }\n        if (point.value < 0) {\n          throw new Error(`Negative values not allowed at data point ${index + 1}: ${point.value}`);\n        }\n      });\n      console.log('Data validation passed, calling API...');\n\n      // Route to appropriate analysis based on metric type\n      if (chartConfig.metricType === 'throughput') {\n        const result = await calculateThroughput({\n          data: sortedData,\n          period: chartConfig.throughputPeriod,\n          baselinePeriod: chartConfig.baselinePeriod,\n          detectionRules: chartConfig.detectionRules\n        });\n        console.log('Received throughput result:', result);\n        setThroughputAnalysis(result);\n      } else {\n        const result = await calculatePBC({\n          data: sortedData,\n          baselinePeriod: chartConfig.baselinePeriod,\n          detectionRules: chartConfig.detectionRules,\n          metricType: chartConfig.metricType\n        });\n        console.log('Received PBC result:', result);\n        setAnalysis(result);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response3;\n      console.error('Error details:', err);\n      let errorMessage = 'Failed to calculate analysis';\n      if (err.message) {\n        errorMessage = err.message;\n      } else if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.detail) {\n        errorMessage = err.response.data.detail;\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 400) {\n        errorMessage = 'Invalid data provided. Please check your input.';\n      } else if (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 500) {\n        errorMessage = 'Server error during calculation. Please try again.';\n      } else if (err.code === 'ECONNREFUSED') {\n        errorMessage = 'Cannot connect to backend server. Please ensure the backend is running on port 8000.';\n      } else if (err.code === 'NETWORK_ERROR') {\n        errorMessage = 'Network error. Please check your connection.';\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRetry = () => {\n    setError(null);\n    setAnalysis(null);\n    setThroughputAnalysis(null);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          gutterBottom: true,\n          align: \"center\",\n          children: \"Process Behaviour Chart Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"textSecondary\",\n          align: \"center\",\n          children: \"Create XmR charts to distinguish between routine variation (noise) and exceptional variation (signal)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          align: \"center\",\n          sx: {\n            mt: 2\n          },\n          children: \"Based on Vacanti's methodology: \\\"Data have no meaning apart from their context\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataInput, {\n        onDataSubmit: handleDataSubmit,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        my: 4,\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mt: 2\n          },\n          children: \"Calculating analysis using Vacanti's methodology...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 3\n        },\n        action: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRetry,\n          style: {\n            background: 'none',\n            border: 'none',\n            color: 'inherit',\n            textDecoration: 'underline',\n            cursor: 'pointer'\n          },\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          gutterBottom: true,\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), analysis && config && config.metricType === 'cycle_time' && !loading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Cycle Time Analysis Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: [\"Baseline Period: \", analysis.baselinePeriod, \" data points | Detection Rules: \", config.detectionRules.join(', ').toUpperCase(), \" | Signals Detected: \", analysis.signals.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PBCChart, {\n          analysis: analysis,\n          showSigmaLines: config.showSigmaLines,\n          title: \"Cycle Time Analysis - Process Behaviour Chart (XmR)\",\n          originalData: originalData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(SignalDetector, {\n            signals: analysis.signals\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), throughputAnalysis && config && config.metricType === 'throughput' && !loading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Throughput Analysis Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: [\"Period: \", config.throughputPeriod, \" | Baseline Period: \", throughputAnalysis.baselinePeriod, \" periods | Signals Detected: \", throughputAnalysis.signals.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThroughputChart, {\n          analysis: throughputAnalysis,\n          showSigmaLines: config.showSigmaLines,\n          title: \"Throughput Analysis - Process Behaviour Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(SignalDetector, {\n            signals: throughputAnalysis.signals\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), !analysis && !throughputAnalysis && !loading && !error && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          mt: 6,\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: \"Ready to Analyze Your Flow Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"textSecondary\",\n          children: \"Upload your Nave CSV file or enter data manually to create Process Behaviour Charts. Choose between Cycle Time and Throughput analysis based on your needs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Enhanced Features:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), \" Automatic filtering, task-specific tooltips, and Vacanti-compliant analysis.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hdYsh9iboSLSvww7TMvAmHbjGj4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Typography","Box","Alert","CircularProgress","ThemeProvider","createTheme","CssBaseline","DataInput","PBCChart","ThroughputChart","SignalDetector","calculatePBC","calculateThroughput","jsxDEV","_jsxDEV","Fragment","_Fragment","theme","palette","primary","main","secondary","App","_s","analysis","setAnalysis","throughputAnalysis","setThroughputAnalysis","loading","setLoading","error","setError","config","setConfig","originalData","setOriginalData","handleDataSubmit","data","chartConfig","console","log","length","Error","sortedData","sort","a","b","timestamp","getTime","forEach","point","index","isNaN","value","isFinite","metricType","result","period","throughputPeriod","baselinePeriod","detectionRules","err","_err$response","_err$response$data","_err$response2","_err$response3","errorMessage","message","response","detail","status","code","handleRetry","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","py","mb","variant","component","gutterBottom","align","color","mt","onDataSubmit","display","flexDirection","alignItems","my","size","severity","action","onClick","style","background","border","textDecoration","cursor","join","toUpperCase","signals","showSigmaLines","title","textAlign","_c","$RefreshReg$"],"sources":["/Users/maximiliandazer/Process Control chart/Process-Control-chart/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Alert,\n  CircularProgress,\n  ThemeProvider,\n  createTheme,\n  CssBaseline\n} from '@mui/material';\nimport DataInput from './components/data/DataInput';\nimport PBCChart from './components/charts/PBCChart';\nimport ThroughputChart from './components/charts/ThroughputChart';\nimport SignalDetector from './components/analysis/SignalDetector';\nimport { DataPoint, ChartConfiguration, PBCAnalysis, ThroughputResponse } from './types';\nimport { calculatePBC, calculateThroughput } from './services/api';\nimport './App.css';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n  },\n});\n\nfunction App() {\n  const [analysis, setAnalysis] = useState<PBCAnalysis | null>(null);\n  const [throughputAnalysis, setThroughputAnalysis] = useState<ThroughputResponse | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [config, setConfig] = useState<ChartConfiguration | null>(null);\n  const [originalData, setOriginalData] = useState<DataPoint[]>([]);\n\n  const handleDataSubmit = async (data: DataPoint[], chartConfig: ChartConfiguration) => {\n    setLoading(true);\n    setError(null);\n    setConfig(chartConfig);\n    setOriginalData(data);\n    \n    // Clear previous analysis\n    setAnalysis(null);\n    setThroughputAnalysis(null);\n    \n    try {\n      console.log('Submitting data:', data);\n      console.log('Chart configuration:', chartConfig);\n      \n      // Validate data\n      if (!data || data.length === 0) {\n        throw new Error('No data provided');\n      }\n\n      if (data.length < 3) {\n        throw new Error('Minimum 3 data points required');\n      }\n\n      // Sort data chronologically\n      const sortedData = [...data].sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime());\n\n      // Validate each data point\n      sortedData.forEach((point, index) => {\n        if (!point.timestamp || isNaN(point.timestamp.getTime())) {\n          throw new Error(`Invalid timestamp at data point ${index + 1}`);\n        }\n        if (typeof point.value !== 'number' || isNaN(point.value) || !isFinite(point.value)) {\n          throw new Error(`Invalid value at data point ${index + 1}: ${point.value}`);\n        }\n        if (point.value < 0) {\n          throw new Error(`Negative values not allowed at data point ${index + 1}: ${point.value}`);\n        }\n      });\n\n      console.log('Data validation passed, calling API...');\n      \n      // Route to appropriate analysis based on metric type\n      if (chartConfig.metricType === 'throughput') {\n        const result = await calculateThroughput({\n          data: sortedData,\n          period: chartConfig.throughputPeriod,\n          baselinePeriod: chartConfig.baselinePeriod,\n          detectionRules: chartConfig.detectionRules\n        });\n        \n        console.log('Received throughput result:', result);\n        setThroughputAnalysis(result);\n      } else {\n        const result = await calculatePBC({\n          data: sortedData,\n          baselinePeriod: chartConfig.baselinePeriod,\n          detectionRules: chartConfig.detectionRules,\n          metricType: chartConfig.metricType\n        });\n        \n        console.log('Received PBC result:', result);\n        setAnalysis(result);\n      }\n      \n    } catch (err: any) {\n      console.error('Error details:', err);\n      \n      let errorMessage = 'Failed to calculate analysis';\n      \n      if (err.message) {\n        errorMessage = err.message;\n      } else if (err.response?.data?.detail) {\n        errorMessage = err.response.data.detail;\n      } else if (err.response?.status === 400) {\n        errorMessage = 'Invalid data provided. Please check your input.';\n      } else if (err.response?.status === 500) {\n        errorMessage = 'Server error during calculation. Please try again.';\n      } else if (err.code === 'ECONNREFUSED') {\n        errorMessage = 'Cannot connect to backend server. Please ensure the backend is running on port 8000.';\n      } else if (err.code === 'NETWORK_ERROR') {\n        errorMessage = 'Network error. Please check your connection.';\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRetry = () => {\n    setError(null);\n    setAnalysis(null);\n    setThroughputAnalysis(null);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container maxWidth=\"xl\" sx={{ py: 4 }}>\n        <Box sx={{ mb: 4 }}>\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n            Process Behaviour Chart Generator\n          </Typography>\n          <Typography variant=\"h6\" color=\"textSecondary\" align=\"center\">\n            Create XmR charts to distinguish between routine variation (noise) and exceptional variation (signal)\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" sx={{ mt: 2 }}>\n            Based on Vacanti's methodology: \"Data have no meaning apart from their context\"\n          </Typography>\n        </Box>\n\n        <DataInput onDataSubmit={handleDataSubmit} loading={loading} />\n\n        {loading && (\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" my={4}>\n            <CircularProgress size={60} />\n            <Typography variant=\"body2\" sx={{ mt: 2 }}>\n              Calculating analysis using Vacanti's methodology...\n            </Typography>\n          </Box>\n        )}\n\n        {error && (\n          <Alert \n            severity=\"error\" \n            sx={{ mb: 3 }}\n            action={\n              <button onClick={handleRetry} style={{ \n                background: 'none', \n                border: 'none', \n                color: 'inherit', \n                textDecoration: 'underline',\n                cursor: 'pointer'\n              }}>\n                Try Again\n              </button>\n            }\n          >\n            <Typography variant=\"subtitle2\" gutterBottom>\n              Error\n            </Typography>\n            {error}\n          </Alert>\n        )}\n\n        {/* Cycle Time Analysis Results */}\n        {analysis && config && config.metricType === 'cycle_time' && !loading && !error && (\n          <>\n            <Box sx={{ mb: 3 }}>\n              <Typography variant=\"h4\" gutterBottom>\n                Cycle Time Analysis Results\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Baseline Period: {analysis.baselinePeriod} data points | \n                Detection Rules: {config.detectionRules.join(', ').toUpperCase()} | \n                Signals Detected: {analysis.signals.length}\n              </Typography>\n            </Box>\n            \n            <PBCChart \n              analysis={analysis} \n              showSigmaLines={config.showSigmaLines}\n              title=\"Cycle Time Analysis - Process Behaviour Chart (XmR)\"\n              originalData={originalData}\n            />\n            \n            <Box sx={{ mt: 4 }}>\n              <SignalDetector signals={analysis.signals} />\n            </Box>\n          </>\n        )}\n\n        {/* Throughput Analysis Results */}\n        {throughputAnalysis && config && config.metricType === 'throughput' && !loading && !error && (\n          <>\n            <Box sx={{ mb: 3 }}>\n              <Typography variant=\"h4\" gutterBottom>\n                Throughput Analysis Results\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Period: {config.throughputPeriod} | \n                Baseline Period: {throughputAnalysis.baselinePeriod} periods | \n                Signals Detected: {throughputAnalysis.signals.length}\n              </Typography>\n            </Box>\n            \n            <ThroughputChart \n              analysis={throughputAnalysis} \n              showSigmaLines={config.showSigmaLines}\n              title=\"Throughput Analysis - Process Behaviour Chart\"\n            />\n            \n            <Box sx={{ mt: 4 }}>\n              <SignalDetector signals={throughputAnalysis.signals} />\n            </Box>\n          </>\n        )}\n\n        {!analysis && !throughputAnalysis && !loading && !error && (\n          <Box sx={{ textAlign: 'center', mt: 6, mb: 4 }}>\n            <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom>\n              Ready to Analyze Your Flow Metrics\n            </Typography>\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              Upload your Nave CSV file or enter data manually to create Process Behaviour Charts.\n              Choose between Cycle Time and Throughput analysis based on your needs.\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mt: 2 }}>\n              <strong>Enhanced Features:</strong> Automatic filtering, task-specific tooltips, and Vacanti-compliant analysis.\n            </Typography>\n          </Box>\n        )}\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}