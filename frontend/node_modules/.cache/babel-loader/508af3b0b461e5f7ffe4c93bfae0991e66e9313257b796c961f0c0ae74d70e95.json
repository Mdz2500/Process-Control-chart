{"ast":null,"code":"var _jsxFileName = \"/Users/maximiliandazer/Process Control chart/Process-Control-chart/frontend/src/components/charts/ThroughputChart.tsx\";\nimport React from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Box, Typography, Grid, Paper, Chip, Stack } from '@mui/material';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nconst ThroughputChart = ({\n  analysis,\n  showSigmaLines = false,\n  title = \"Throughput Analysis - Process Behaviour Chart\"\n}) => {\n  const {\n    throughputAnalysis,\n    xChart,\n    mrChart,\n    signals,\n    recommendations\n  } = analysis;\n\n  // Create signal point colors\n  const getPointColors = (dataLength, signals) => {\n    const colors = new Array(dataLength).fill('#2196F3');\n    signals.forEach(signal => {\n      signal.dataPoints.forEach(pointIndex => {\n        if (pointIndex < colors.length) {\n          colors[pointIndex] = signal.severity === 'high' ? '#f44336' : signal.severity === 'moderate' ? '#ff9800' : '#ff5722';\n        }\n      });\n    });\n    return colors;\n  };\n\n  // Throughput Run Chart (Primary visualization)\n  const throughputRunChartData = {\n    labels: xChart.timestamps.map(ts => format(new Date(ts), 'MM/dd/yyyy')),\n    datasets: [{\n      label: `Throughput (${throughputAnalysis.period})`,\n      data: xChart.values,\n      borderColor: '#2196F3',\n      backgroundColor: 'rgba(33, 150, 243, 0.1)',\n      pointBackgroundColor: getPointColors(xChart.values.length, signals),\n      pointBorderColor: getPointColors(xChart.values.length, signals),\n      pointRadius: 6,\n      tension: 0.1,\n      fill: true\n    }, {\n      label: 'Average Throughput',\n      data: Array(xChart.values.length).fill(xChart.average),\n      borderColor: '#4CAF50',\n      borderDash: [5, 5],\n      pointRadius: 0,\n      tension: 0,\n      fill: false\n    }, {\n      label: 'Upper Natural Process Limit',\n      data: Array(xChart.values.length).fill(xChart.upperLimit),\n      borderColor: '#f44336',\n      borderDash: [10, 5],\n      pointRadius: 0,\n      tension: 0,\n      fill: false\n    }, {\n      label: 'Lower Natural Process Limit',\n      data: Array(xChart.values.length).fill(xChart.lowerLimit),\n      borderColor: '#f44336',\n      borderDash: [10, 5],\n      pointRadius: 0,\n      tension: 0,\n      fill: false\n    }]\n  };\n\n  // Add sigma lines if requested\n  if (showSigmaLines && xChart.sigmaLines) {\n    throughputRunChartData.datasets.push({\n      label: '2-Sigma Upper',\n      data: Array(xChart.values.length).fill(xChart.sigmaLines.twoSigmaUpper),\n      borderColor: '#FF9800',\n      borderDash: [3, 3],\n      pointRadius: 0,\n      tension: 0,\n      fill: false\n    }, {\n      label: '2-Sigma Lower',\n      data: Array(xChart.values.length).fill(xChart.sigmaLines.twoSigmaLower),\n      borderColor: '#FF9800',\n      borderDash: [3, 3],\n      pointRadius: 0,\n      tension: 0,\n      fill: false\n    });\n  }\n\n  // Throughput Histogram\n  const histogramData = {\n    labels: [...new Set(xChart.values)].sort((a, b) => a - b).map(v => v.toString()),\n    datasets: [{\n      label: 'Frequency',\n      data: [...new Set(xChart.values)].sort((a, b) => a - b).map(value => xChart.values.filter(v => v === value).length),\n      backgroundColor: 'rgba(33, 150, 243, 0.6)',\n      borderColor: '#2196F3',\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          title: function (context) {\n            const pointIndex = context[0].dataIndex;\n            const period = throughputAnalysis.throughputData[pointIndex];\n            if (period) {\n              return `${format(new Date(period.periodStart), 'MMM dd')} - ${format(new Date(period.periodEnd), 'MMM dd, yyyy')}`;\n            }\n            return context[0].label || '';\n          },\n          label: function (context) {\n            const pointIndex = context.dataIndex;\n            const value = context.parsed.y;\n            const datasetLabel = context.dataset.label;\n            const period = throughputAnalysis.throughputData[pointIndex];\n            if (datasetLabel !== null && datasetLabel !== void 0 && datasetLabel.includes('Throughput') && period) {\n              return [`${datasetLabel}: ${value} items`, `Completed: ${period.itemsCompleted.slice(0, 3).join(', ')}${period.itemsCompleted.length > 3 ? ` +${period.itemsCompleted.length - 3} more` : ''}`, `Period: ${throughputAnalysis.period}`];\n            }\n            return `${datasetLabel}: ${value.toFixed(2)}`;\n          },\n          afterLabel: function (context) {\n            const pointIndex = context.dataIndex;\n            const relevantSignals = signals.filter(signal => signal.dataPoints.includes(pointIndex));\n            if (relevantSignals.length > 0) {\n              return relevantSignals.map(signal => `ðŸš¨ Signal: ${signal.type.toUpperCase()} - ${signal.description}`);\n            }\n            return [];\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Time Period'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Items Completed'\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  const histogramOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return `${context.parsed.y} period(s) with ${context.label} items`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Items Completed'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Frequency'\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  const getPredictabilityColor = score => {\n    if (score >= 0.8) return 'success';\n    if (score >= 0.6) return 'warning';\n    return 'error';\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h3\",\n      align: \"center\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 3,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: [\"Throughput Statistics (\", throughputAnalysis.period, \" periods)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"primary\",\n              children: throughputAnalysis.averageThroughput.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Average Throughput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"secondary\",\n              children: throughputAnalysis.medianThroughput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Median Throughput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: [throughputAnalysis.minThroughput, \" - \", throughputAnalysis.maxThroughput]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Range\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              label: `${(throughputAnalysis.predictabilityScore * 100).toFixed(0)}%`,\n              color: getPredictabilityColor(throughputAnalysis.predictabilityScore),\n              size: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              sx: {\n                mt: 1\n              },\n              children: \"Predictability Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          flexWrap: \"wrap\",\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: `${throughputAnalysis.totalItemsCompleted} total items`,\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: `${throughputAnalysis.totalPeriods} periods analyzed`,\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: `${signals.length} signals detected`,\n            size: \"small\",\n            color: signals.length > 0 ? 'warning' : 'success'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 3,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h4\",\n        gutterBottom: true,\n        children: \"Throughput Run Chart - Process Behaviour Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        paragraph: true,\n        children: \"Shows throughput variation over time with Natural Process Limits. Points outside limits indicate exceptional variation requiring investigation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: '400px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: throughputRunChartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 3,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h4\",\n        gutterBottom: true,\n        children: \"Throughput Histogram - Frequency Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        paragraph: true,\n        children: \"Shows how often specific throughput values occur. Useful for understanding typical delivery capacity.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: histogramData,\n          options: histogramOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 3,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h4\",\n        gutterBottom: true,\n        children: \"Moving Range Chart - Throughput Variation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        paragraph: true,\n        children: \"Shows period-to-period variation in throughput. High moving ranges indicate process instability.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: mrChart.timestamps.map(ts => format(new Date(ts), 'MM/dd/yyyy')),\n            datasets: [{\n              label: 'Moving Range',\n              data: mrChart.values,\n              borderColor: '#673AB7',\n              backgroundColor: 'transparent',\n              pointBackgroundColor: '#673AB7',\n              pointRadius: 4,\n              tension: 0,\n              fill: false\n            }, {\n              label: 'Average Moving Range',\n              data: Array(mrChart.values.length).fill(mrChart.average),\n              borderColor: '#4CAF50',\n              borderDash: [5, 5],\n              pointRadius: 0,\n              tension: 0,\n              fill: false\n            }, {\n              label: 'Upper Range Limit',\n              data: Array(mrChart.values.length).fill(mrChart.upperLimit),\n              borderColor: '#f44336',\n              borderDash: [10, 5],\n              pointRadius: 0,\n              tension: 0,\n              fill: false\n            }]\n          },\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), recommendations && recommendations.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 3,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Throughput Analysis Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"ul\",\n        sx: {\n          pl: 2\n        },\n        children: recommendations.map((recommendation, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"li\",\n          variant: \"body2\",\n          sx: {\n            mb: 1\n          },\n          children: recommendation\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }, this), signals.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: [\"Throughput Signals Detected: \", signals.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        paragraph: true,\n        children: \"Signals in throughput data indicate changes in delivery capacity or process capability.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: signals.map((signal, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            variant: \"outlined\",\n            sx: {\n              p: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 1,\n              alignItems: \"center\",\n              sx: {\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: signal.type.toUpperCase(),\n                size: \"small\",\n                color: signal.severity === 'high' ? 'error' : signal.severity === 'moderate' ? 'warning' : 'info'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: signal.severity,\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 1\n              },\n              children: signal.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"textSecondary\",\n              children: [\"Periods: \", signal.dataPoints.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_c = ThroughputChart;\nexport default ThroughputChart;\nvar _c;\n$RefreshReg$(_c, \"ThroughputChart\");","map":{"version":3,"names":["React","Line","Bar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","Box","Typography","Grid","Paper","Chip","Stack","format","jsxDEV","_jsxDEV","register","ThroughputChart","analysis","showSigmaLines","title","throughputAnalysis","xChart","mrChart","signals","recommendations","getPointColors","dataLength","colors","Array","fill","forEach","signal","dataPoints","pointIndex","length","severity","throughputRunChartData","labels","timestamps","map","ts","Date","datasets","label","period","data","values","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","pointRadius","tension","average","borderDash","upperLimit","lowerLimit","sigmaLines","push","twoSigmaUpper","twoSigmaLower","histogramData","Set","sort","a","b","v","toString","value","filter","borderWidth","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","tooltip","mode","intersect","callbacks","context","dataIndex","throughputData","periodStart","periodEnd","parsed","y","datasetLabel","dataset","includes","itemsCompleted","slice","join","toFixed","afterLabel","relevantSignals","type","toUpperCase","description","scales","x","display","text","beginAtZero","histogramOptions","getPredictabilityColor","score","sx","width","mb","children","variant","component","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","container","spacing","item","xs","sm","md","textAlign","color","averageThroughput","medianThroughput","minThroughput","maxThroughput","predictabilityScore","size","mt","direction","flexWrap","totalItemsCompleted","totalPeriods","paragraph","height","options","pl","recommendation","index","alignItems","_c","$RefreshReg$"],"sources":["/Users/maximiliandazer/Process Control chart/Process-Control-chart/frontend/src/components/charts/ThroughputChart.tsx"],"sourcesContent":["import React from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ChartOptions,\n} from 'chart.js';\nimport { Box, Typography, Grid, Paper, Chip, Stack } from '@mui/material';\nimport { ThroughputResponse, Signal } from '../../types';\nimport { format } from 'date-fns';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface ThroughputChartProps {\n  analysis: ThroughputResponse;\n  showSigmaLines: boolean;\n  title?: string;\n}\n\nconst ThroughputChart: React.FC<ThroughputChartProps> = ({ \n  analysis, \n  showSigmaLines = false,\n  title = \"Throughput Analysis - Process Behaviour Chart\" \n}) => {\n  const { throughputAnalysis, xChart, mrChart, signals, recommendations } = analysis;\n\n  // Create signal point colors\n  const getPointColors = (dataLength: number, signals: Signal[]) => {\n    const colors = new Array(dataLength).fill('#2196F3');\n    \n    signals.forEach(signal => {\n      signal.dataPoints.forEach(pointIndex => {\n        if (pointIndex < colors.length) {\n          colors[pointIndex] = signal.severity === 'high' ? '#f44336' : \n                             signal.severity === 'moderate' ? '#ff9800' : '#ff5722';\n        }\n      });\n    });\n    \n    return colors;\n  };\n\n  // Throughput Run Chart (Primary visualization)\n  const throughputRunChartData = {\n    labels: xChart.timestamps.map(ts => format(new Date(ts), 'MM/dd/yyyy')),\n    datasets: [\n      {\n        label: `Throughput (${throughputAnalysis.period})`,\n        data: xChart.values,\n        borderColor: '#2196F3',\n        backgroundColor: 'rgba(33, 150, 243, 0.1)',\n        pointBackgroundColor: getPointColors(xChart.values.length, signals),\n        pointBorderColor: getPointColors(xChart.values.length, signals),\n        pointRadius: 6,\n        tension: 0.1,\n        fill: true\n      },\n      {\n        label: 'Average Throughput',\n        data: Array(xChart.values.length).fill(xChart.average),\n        borderColor: '#4CAF50',\n        borderDash: [5, 5],\n        pointRadius: 0,\n        tension: 0,\n        fill: false\n      },\n      {\n        label: 'Upper Natural Process Limit',\n        data: Array(xChart.values.length).fill(xChart.upperLimit),\n        borderColor: '#f44336',\n        borderDash: [10, 5],\n        pointRadius: 0,\n        tension: 0,\n        fill: false\n      },\n      {\n        label: 'Lower Natural Process Limit',\n        data: Array(xChart.values.length).fill(xChart.lowerLimit),\n        borderColor: '#f44336',\n        borderDash: [10, 5],\n        pointRadius: 0,\n        tension: 0,\n        fill: false\n      }\n    ]\n  };\n\n  // Add sigma lines if requested\n  if (showSigmaLines && xChart.sigmaLines) {\n    throughputRunChartData.datasets.push(\n      {\n        label: '2-Sigma Upper',\n        data: Array(xChart.values.length).fill(xChart.sigmaLines.twoSigmaUpper),\n        borderColor: '#FF9800',\n        borderDash: [3, 3],\n        pointRadius: 0,\n        tension: 0,\n        fill: false\n      },\n      {\n        label: '2-Sigma Lower',\n        data: Array(xChart.values.length).fill(xChart.sigmaLines.twoSigmaLower),\n        borderColor: '#FF9800',\n        borderDash: [3, 3],\n        pointRadius: 0,\n        tension: 0,\n        fill: false\n      }\n    );\n  }\n\n  // Throughput Histogram\n  const histogramData = {\n    labels: [...new Set(xChart.values)].sort((a, b) => a - b).map(v => v.toString()),\n    datasets: [\n      {\n        label: 'Frequency',\n        data: [...new Set(xChart.values)].sort((a, b) => a - b).map(value => \n          xChart.values.filter(v => v === value).length\n        ),\n        backgroundColor: 'rgba(33, 150, 243, 0.6)',\n        borderColor: '#2196F3',\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const chartOptions: ChartOptions<'line'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          title: function(context) {\n            const pointIndex = context[0].dataIndex;\n            const period = throughputAnalysis.throughputData[pointIndex];\n            if (period) {\n              return `${format(new Date(period.periodStart), 'MMM dd')} - ${format(new Date(period.periodEnd), 'MMM dd, yyyy')}`;\n            }\n            return context[0].label || '';\n          },\n          label: function(context) {\n            const pointIndex = context.dataIndex;\n            const value = context.parsed.y;\n            const datasetLabel = context.dataset.label;\n            const period = throughputAnalysis.throughputData[pointIndex];\n            \n            if (datasetLabel?.includes('Throughput') && period) {\n              return [\n                `${datasetLabel}: ${value} items`,\n                `Completed: ${period.itemsCompleted.slice(0, 3).join(', ')}${period.itemsCompleted.length > 3 ? ` +${period.itemsCompleted.length - 3} more` : ''}`,\n                `Period: ${throughputAnalysis.period}`\n              ];\n            }\n            \n            return `${datasetLabel}: ${value.toFixed(2)}`;\n          },\n          afterLabel: function(context) {\n            const pointIndex = context.dataIndex;\n            const relevantSignals = signals.filter(signal => \n              signal.dataPoints.includes(pointIndex)\n            );\n            \n            if (relevantSignals.length > 0) {\n              return relevantSignals.map(signal => \n                `ðŸš¨ Signal: ${signal.type.toUpperCase()} - ${signal.description}`\n              );\n            }\n            return [];\n          }\n        }\n      },\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Time Period'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Items Completed'\n        },\n        beginAtZero: true\n      }\n    }\n  };\n\n  const histogramOptions: ChartOptions<'bar'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            return `${context.parsed.y} period(s) with ${context.label} items`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Items Completed'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Frequency'\n        },\n        beginAtZero: true\n      }\n    }\n  };\n\n  const getPredictabilityColor = (score: number) => {\n    if (score >= 0.8) return 'success';\n    if (score >= 0.6) return 'warning';\n    return 'error';\n  };\n\n  return (\n    <Box sx={{ width: '100%', mb: 4 }}>\n      <Typography variant=\"h4\" component=\"h3\" align=\"center\" gutterBottom>\n        {title}\n      </Typography>\n      \n      {/* Throughput Statistics Summary */}\n      <Paper elevation={2} sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Throughput Statistics ({throughputAnalysis.period} periods)\n        </Typography>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6} md={3}>\n            <Box textAlign=\"center\">\n              <Typography variant=\"h4\" color=\"primary\">\n                {throughputAnalysis.averageThroughput.toFixed(1)}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Average Throughput\n              </Typography>\n            </Box>\n          </Grid>\n          \n          <Grid item xs={12} sm={6} md={3}>\n            <Box textAlign=\"center\">\n              <Typography variant=\"h4\" color=\"secondary\">\n                {throughputAnalysis.medianThroughput}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Median Throughput\n              </Typography>\n            </Box>\n          </Grid>\n          \n          <Grid item xs={12} sm={6} md={3}>\n            <Box textAlign=\"center\">\n              <Typography variant=\"h4\">\n                {throughputAnalysis.minThroughput} - {throughputAnalysis.maxThroughput}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Range\n              </Typography>\n            </Box>\n          </Grid>\n          \n          <Grid item xs={12} sm={6} md={3}>\n            <Box textAlign=\"center\">\n              <Chip \n                label={`${(throughputAnalysis.predictabilityScore * 100).toFixed(0)}%`}\n                color={getPredictabilityColor(throughputAnalysis.predictabilityScore)}\n                size=\"large\"\n              />\n              <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mt: 1 }}>\n                Predictability Score\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n        \n        <Box sx={{ mt: 2 }}>\n          <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\">\n            <Chip label={`${throughputAnalysis.totalItemsCompleted} total items`} size=\"small\" />\n            <Chip label={`${throughputAnalysis.totalPeriods} periods analyzed`} size=\"small\" />\n            <Chip label={`${signals.length} signals detected`} size=\"small\" color={signals.length > 0 ? 'warning' : 'success'} />\n          </Stack>\n        </Box>\n      </Paper>\n      \n      {/* Throughput Run Chart */}\n      <Paper elevation={2} sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h5\" component=\"h4\" gutterBottom>\n          Throughput Run Chart - Process Behaviour Analysis\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n          Shows throughput variation over time with Natural Process Limits. Points outside limits indicate exceptional variation requiring investigation.\n        </Typography>\n        <Box sx={{ height: '400px' }}>\n          <Line data={throughputRunChartData} options={chartOptions} />\n        </Box>\n      </Paper>\n      \n      {/* Throughput Histogram */}\n      <Paper elevation={2} sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h5\" component=\"h4\" gutterBottom>\n          Throughput Histogram - Frequency Distribution\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n          Shows how often specific throughput values occur. Useful for understanding typical delivery capacity.\n        </Typography>\n        <Box sx={{ height: '300px' }}>\n          <Bar data={histogramData} options={histogramOptions} />\n        </Box>\n      </Paper>\n\n      {/* Moving Range Chart */}\n      <Paper elevation={2} sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h5\" component=\"h4\" gutterBottom>\n          Moving Range Chart - Throughput Variation\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n          Shows period-to-period variation in throughput. High moving ranges indicate process instability.\n        </Typography>\n        <Box sx={{ height: '300px' }}>\n          <Line \n            data={{\n              labels: mrChart.timestamps.map(ts => format(new Date(ts), 'MM/dd/yyyy')),\n              datasets: [\n                {\n                  label: 'Moving Range',\n                  data: mrChart.values,\n                  borderColor: '#673AB7',\n                  backgroundColor: 'transparent',\n                  pointBackgroundColor: '#673AB7',\n                  pointRadius: 4,\n                  tension: 0,\n                  fill: false\n                },\n                {\n                  label: 'Average Moving Range',\n                  data: Array(mrChart.values.length).fill(mrChart.average),\n                  borderColor: '#4CAF50',\n                  borderDash: [5, 5],\n                  pointRadius: 0,\n                  tension: 0,\n                  fill: false\n                },\n                {\n                  label: 'Upper Range Limit',\n                  data: Array(mrChart.values.length).fill(mrChart.upperLimit),\n                  borderColor: '#f44336',\n                  borderDash: [10, 5],\n                  pointRadius: 0,\n                  tension: 0,\n                  fill: false\n                }\n              ]\n            }} \n            options={chartOptions} \n          />\n        </Box>\n      </Paper>\n\n      {/* Recommendations */}\n      {recommendations && recommendations.length > 0 && (\n        <Paper elevation={2} sx={{ p: 3, mb: 4 }}>\n          <Typography variant=\"h5\" gutterBottom>\n            Throughput Analysis Recommendations\n          </Typography>\n          <Box component=\"ul\" sx={{ pl: 2 }}>\n            {recommendations.map((recommendation, index) => (\n              <Typography component=\"li\" variant=\"body2\" key={index} sx={{ mb: 1 }}>\n                {recommendation}\n              </Typography>\n            ))}\n          </Box>\n        </Paper>\n      )}\n\n      {/* Signal Summary */}\n      {signals.length > 0 && (\n        <Paper elevation={2} sx={{ p: 3 }}>\n          <Typography variant=\"h5\" gutterBottom>\n            Throughput Signals Detected: {signals.length}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n            Signals in throughput data indicate changes in delivery capacity or process capability.\n          </Typography>\n          \n          <Grid container spacing={2}>\n            {signals.map((signal, index) => (\n              <Grid item xs={12} sm={6} md={4} key={index}>\n                <Paper variant=\"outlined\" sx={{ p: 2 }}>\n                  <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: 1 }}>\n                    <Chip \n                      label={signal.type.toUpperCase()} \n                      size=\"small\" \n                      color={signal.severity === 'high' ? 'error' : signal.severity === 'moderate' ? 'warning' : 'info'}\n                    />\n                    <Chip label={signal.severity} size=\"small\" />\n                  </Stack>\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                    {signal.description}\n                  </Typography>\n                  <Typography variant=\"caption\" color=\"textSecondary\">\n                    Periods: {signal.dataPoints.join(', ')}\n                  </Typography>\n                </Paper>\n              </Grid>\n            ))}\n          </Grid>\n        </Paper>\n      )}\n    </Box>\n  );\n};\n\nexport default ThroughputChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}