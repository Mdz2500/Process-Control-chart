{"ast":null,"code":"var _jsxFileName = \"/Users/maximiliandazer/Process Control chart/Process-Control-chart/frontend/src/components/data/FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, Typography, Alert, LinearProgress } from '@mui/material';\nimport { CloudUpload } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onDataChange\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const text = await file.text();\n      const lines = text.split('\\n').filter(line => line.trim());\n      if (lines.length < 2) {\n        throw new Error('File must contain at least a header row and one data row');\n      }\n      const headers = lines[0].split(',').map(h => h.trim().toLowerCase());\n      const timestampIndex = headers.findIndex(h => h.includes('timestamp') || h.includes('date'));\n      const valueIndex = headers.findIndex(h => h.includes('value') || h.includes('cycle') || h.includes('time'));\n      if (timestampIndex === -1 || valueIndex === -1) {\n        throw new Error('CSV must contain timestamp/date and value columns');\n      }\n      const data = [];\n      for (let i = 1; i < lines.length; i++) {\n        const columns = lines[i].split(',').map(c => c.trim());\n        if (columns.length >= Math.max(timestampIndex, valueIndex) + 1) {\n          const timestamp = new Date(columns[timestampIndex]);\n          const value = parseFloat(columns[valueIndex]);\n          if (!isNaN(timestamp.getTime()) && !isNaN(value)) {\n            data.push({\n              timestamp,\n              value,\n              label: `Row ${i}`\n            });\n          }\n        }\n      }\n      if (data.length === 0) {\n        throw new Error('No valid data rows found');\n      }\n\n      // Sort by timestamp\n      data.sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime());\n      onDataChange(data);\n    } catch (err) {\n      setError(err.message || 'Failed to parse file');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Upload CSV File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      sx: {\n        mb: 2\n      },\n      children: \"Upload a CSV file with timestamp and value columns. Expected format: Date, Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      component: \"label\",\n      startIcon: /*#__PURE__*/_jsxDEV(CloudUpload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 20\n      }, this),\n      disabled: loading,\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: [\"Choose CSV File\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        hidden: true,\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Box","Button","Typography","Alert","LinearProgress","CloudUpload","jsxDEV","_jsxDEV","FileUpload","onDataChange","_s","loading","setLoading","error","setError","handleFileUpload","event","_event$target$files","file","target","files","text","lines","split","filter","line","trim","length","Error","headers","map","h","toLowerCase","timestampIndex","findIndex","includes","valueIndex","data","i","columns","c","Math","max","timestamp","Date","value","parseFloat","isNaN","getTime","push","label","sort","a","b","err","message","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","sx","mb","component","startIcon","disabled","fullWidth","type","accept","hidden","onChange","severity","_c","$RefreshReg$"],"sources":["/Users/maximiliandazer/Process Control chart/Process-Control-chart/frontend/src/components/data/FileUpload.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Typography,\n  Alert,\n  LinearProgress\n} from '@mui/material';\nimport { CloudUpload } from '@mui/icons-material';\nimport { DataPoint } from '../../types';\n\ninterface FileUploadProps {\n  onDataChange: (data: DataPoint[]) => void;\n}\n\nconst FileUpload: React.FC<FileUploadProps> = ({ onDataChange }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const text = await file.text();\n      const lines = text.split('\\n').filter(line => line.trim());\n      \n      if (lines.length < 2) {\n        throw new Error('File must contain at least a header row and one data row');\n      }\n\n      const headers = lines[0].split(',').map(h => h.trim().toLowerCase());\n      const timestampIndex = headers.findIndex(h => h.includes('timestamp') || h.includes('date'));\n      const valueIndex = headers.findIndex(h => h.includes('value') || h.includes('cycle') || h.includes('time'));\n\n      if (timestampIndex === -1 || valueIndex === -1) {\n        throw new Error('CSV must contain timestamp/date and value columns');\n      }\n\n      const data: DataPoint[] = [];\n      \n      for (let i = 1; i < lines.length; i++) {\n        const columns = lines[i].split(',').map(c => c.trim());\n        \n        if (columns.length >= Math.max(timestampIndex, valueIndex) + 1) {\n          const timestamp = new Date(columns[timestampIndex]);\n          const value = parseFloat(columns[valueIndex]);\n          \n          if (!isNaN(timestamp.getTime()) && !isNaN(value)) {\n            data.push({\n              timestamp,\n              value,\n              label: `Row ${i}`\n            });\n          }\n        }\n      }\n\n      if (data.length === 0) {\n        throw new Error('No valid data rows found');\n      }\n\n      // Sort by timestamp\n      data.sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime());\n      \n      onDataChange(data);\n    } catch (err: any) {\n      setError(err.message || 'Failed to parse file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom>\n        Upload CSV File\n      </Typography>\n      \n      <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mb: 2 }}>\n        Upload a CSV file with timestamp and value columns. Expected format: Date, Value\n      </Typography>\n\n      <Button\n        variant=\"outlined\"\n        component=\"label\"\n        startIcon={<CloudUpload />}\n        disabled={loading}\n        fullWidth\n        sx={{ mb: 2 }}\n      >\n        Choose CSV File\n        <input\n          type=\"file\"\n          accept=\".csv\"\n          hidden\n          onChange={handleFileUpload}\n        />\n      </Button>\n\n      {loading && <LinearProgress sx={{ mb: 2 }} />}\n      \n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n    </Box>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,GAAG,EACHC,MAAM,EACNC,UAAU,EACVC,KAAK,EACLC,cAAc,QACT,eAAe;AACtB,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOlD,MAAMC,UAAqC,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMgB,gBAAgB,GAAG,MAAOC,KAA0C,IAAK;IAAA,IAAAC,mBAAA;IAC7E,MAAMC,IAAI,IAAAD,mBAAA,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAqB,CAAC,CAAC;IACpC,IAAI,CAACC,IAAI,EAAE;IAEXN,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMO,IAAI,GAAG,MAAMH,IAAI,CAACG,IAAI,CAAC,CAAC;MAC9B,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MAE1D,IAAIJ,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;QACpB,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;MAC7E;MAEA,MAAMC,OAAO,GAAGP,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACO,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACL,IAAI,CAAC,CAAC,CAACM,WAAW,CAAC,CAAC,CAAC;MACpE,MAAMC,cAAc,GAAGJ,OAAO,CAACK,SAAS,CAACH,CAAC,IAAIA,CAAC,CAACI,QAAQ,CAAC,WAAW,CAAC,IAAIJ,CAAC,CAACI,QAAQ,CAAC,MAAM,CAAC,CAAC;MAC5F,MAAMC,UAAU,GAAGP,OAAO,CAACK,SAAS,CAACH,CAAC,IAAIA,CAAC,CAACI,QAAQ,CAAC,OAAO,CAAC,IAAIJ,CAAC,CAACI,QAAQ,CAAC,OAAO,CAAC,IAAIJ,CAAC,CAACI,QAAQ,CAAC,MAAM,CAAC,CAAC;MAE3G,IAAIF,cAAc,KAAK,CAAC,CAAC,IAAIG,UAAU,KAAK,CAAC,CAAC,EAAE;QAC9C,MAAM,IAAIR,KAAK,CAAC,mDAAmD,CAAC;MACtE;MAEA,MAAMS,IAAiB,GAAG,EAAE;MAE5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,KAAK,CAACK,MAAM,EAAEW,CAAC,EAAE,EAAE;QACrC,MAAMC,OAAO,GAAGjB,KAAK,CAACgB,CAAC,CAAC,CAACf,KAAK,CAAC,GAAG,CAAC,CAACO,GAAG,CAACU,CAAC,IAAIA,CAAC,CAACd,IAAI,CAAC,CAAC,CAAC;QAEtD,IAAIa,OAAO,CAACZ,MAAM,IAAIc,IAAI,CAACC,GAAG,CAACT,cAAc,EAAEG,UAAU,CAAC,GAAG,CAAC,EAAE;UAC9D,MAAMO,SAAS,GAAG,IAAIC,IAAI,CAACL,OAAO,CAACN,cAAc,CAAC,CAAC;UACnD,MAAMY,KAAK,GAAGC,UAAU,CAACP,OAAO,CAACH,UAAU,CAAC,CAAC;UAE7C,IAAI,CAACW,KAAK,CAACJ,SAAS,CAACK,OAAO,CAAC,CAAC,CAAC,IAAI,CAACD,KAAK,CAACF,KAAK,CAAC,EAAE;YAChDR,IAAI,CAACY,IAAI,CAAC;cACRN,SAAS;cACTE,KAAK;cACLK,KAAK,EAAE,OAAOZ,CAAC;YACjB,CAAC,CAAC;UACJ;QACF;MACF;MAEA,IAAID,IAAI,CAACV,MAAM,KAAK,CAAC,EAAE;QACrB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;;MAEA;MACAS,IAAI,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACT,SAAS,CAACK,OAAO,CAAC,CAAC,GAAGK,CAAC,CAACV,SAAS,CAACK,OAAO,CAAC,CAAC,CAAC;MAElEvC,YAAY,CAAC4B,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOiB,GAAQ,EAAE;MACjBxC,QAAQ,CAACwC,GAAG,CAACC,OAAO,IAAI,sBAAsB,CAAC;IACjD,CAAC,SAAS;MACR3C,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEL,OAAA,CAACP,GAAG;IAAAwD,QAAA,gBACFjD,OAAA,CAACL,UAAU;MAACuD,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbvD,OAAA,CAACL,UAAU;MAACuD,OAAO,EAAC,OAAO;MAACM,KAAK,EAAC,eAAe;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAT,QAAA,EAAC;IAEjE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbvD,OAAA,CAACN,MAAM;MACLwD,OAAO,EAAC,UAAU;MAClBS,SAAS,EAAC,OAAO;MACjBC,SAAS,eAAE5D,OAAA,CAACF,WAAW;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAC3BM,QAAQ,EAAEzD,OAAQ;MAClB0D,SAAS;MACTL,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAT,QAAA,GACf,iBAEC,eAAAjD,OAAA;QACE+D,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,MAAM;QACbC,MAAM;QACNC,QAAQ,EAAE1D;MAAiB;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EAERnD,OAAO,iBAAIJ,OAAA,CAACH,cAAc;MAAC4D,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE5CjD,KAAK,iBACJN,OAAA,CAACJ,KAAK;MAACuE,QAAQ,EAAC,OAAO;MAACV,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAT,QAAA,EACnC3C;IAAK;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpD,EAAA,CAjGIF,UAAqC;AAAAmE,EAAA,GAArCnE,UAAqC;AAmG3C,eAAeA,UAAU;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}