{"ast":null,"code":"var _jsxFileName = \"/Users/maximiliandazer/Process Control chart/Process-Control-chart/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, Box, Alert, CircularProgress, ThemeProvider, createTheme, CssBaseline } from '@mui/material';\nimport DataInput from './components/data/DataInput';\nimport PBCChart from './components/charts/PBCChart';\nimport SignalDetector from './components/analysis/SignalDetector';\nimport { calculatePBC } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2'\n    },\n    secondary: {\n      main: '#dc004e'\n    }\n  }\n});\nfunction App() {\n  _s();\n  const [analysis, setAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [config, setConfig] = useState(null);\n  const handleDataSubmit = async (data, chartConfig) => {\n    setLoading(true);\n    setError(null);\n    setConfig(chartConfig);\n    try {\n      const result = await calculatePBC({\n        data,\n        baselinePeriod: chartConfig.baselinePeriod,\n        detectionRules: chartConfig.detectionRules\n      });\n      setAnalysis(result);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Failed to calculate PBC');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          gutterBottom: true,\n          align: \"center\",\n          children: \"Process Behaviour Chart Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"textSecondary\",\n          align: \"center\",\n          children: \"Create XmR charts to distinguish between routine variation (noise) and exceptional variation (signal)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataInput, {\n        onDataSubmit: handleDataSubmit,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        my: 4,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 3\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), analysis && config && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(PBCChart, {\n          analysis: analysis,\n          showSigmaLines: config.showSigmaLines\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SignalDetector, {\n          signals: analysis.signals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uf25SyIdE72R3uORpuAcq6XoDh8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Typography","Box","Alert","CircularProgress","ThemeProvider","createTheme","CssBaseline","DataInput","PBCChart","SignalDetector","calculatePBC","jsxDEV","_jsxDEV","Fragment","_Fragment","theme","palette","primary","main","secondary","App","_s","analysis","setAnalysis","loading","setLoading","error","setError","config","setConfig","handleDataSubmit","data","chartConfig","result","baselinePeriod","detectionRules","err","_err$response","_err$response$data","response","detail","console","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","py","mb","variant","component","gutterBottom","align","color","onDataSubmit","display","justifyContent","my","size","severity","showSigmaLines","signals","_c","$RefreshReg$"],"sources":["/Users/maximiliandazer/Process Control chart/Process-Control-chart/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Alert,\n  CircularProgress,\n  ThemeProvider,\n  createTheme,\n  CssBaseline\n} from '@mui/material';\nimport DataInput from './components/data/DataInput';\nimport PBCChart from './components/charts/PBCChart';\nimport SignalDetector from './components/analysis/SignalDetector';\nimport { DataPoint, ChartConfiguration, PBCAnalysis } from './types';\nimport { calculatePBC } from './services/api';\nimport './App.css';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n  },\n});\n\nfunction App() {\n  const [analysis, setAnalysis] = useState<PBCAnalysis | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [config, setConfig] = useState<ChartConfiguration | null>(null);\n\n  const handleDataSubmit = async (data: DataPoint[], chartConfig: ChartConfiguration) => {\n    setLoading(true);\n    setError(null);\n    setConfig(chartConfig);\n    \n    try {\n      const result = await calculatePBC({\n        data,\n        baselinePeriod: chartConfig.baselinePeriod,\n        detectionRules: chartConfig.detectionRules\n      });\n      \n      setAnalysis(result);\n    } catch (err: any) {\n      setError(err.response?.data?.detail || 'Failed to calculate PBC');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container maxWidth=\"xl\" sx={{ py: 4 }}>\n        <Box sx={{ mb: 4 }}>\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n            Process Behaviour Chart Generator\n          </Typography>\n          <Typography variant=\"h6\" color=\"textSecondary\" align=\"center\">\n            Create XmR charts to distinguish between routine variation (noise) and exceptional variation (signal)\n          </Typography>\n        </Box>\n\n        <DataInput onDataSubmit={handleDataSubmit} loading={loading} />\n\n        {loading && (\n          <Box display=\"flex\" justifyContent=\"center\" my={4}>\n            <CircularProgress size={60} />\n          </Box>\n        )}\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        {analysis && config && (\n          <>\n            <PBCChart \n              analysis={analysis} \n              showSigmaLines={config.showSigmaLines}\n            />\n            <SignalDetector signals={analysis.signals} />\n          </>\n        )}\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}